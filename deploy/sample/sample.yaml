---
# Source: loadbalancerip-mutator/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: loadbalancerip-mutator
  namespace: loadbalancerip-mutator
---
# Source: loadbalancerip-mutator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: loadbalancerip-mutator
rules:
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "watch", "list"]
---
# Source: loadbalancerip-mutator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: loadbalancerip-mutator
subjects:
  - kind: ServiceAccount
    name: loadbalancerip-mutator
    namespace: loadbalancerip-mutator
roleRef:
  kind: ClusterRole
  name: loadbalancerip-mutator
  apiGroup: rbac.authorization.k8s.io
---
# Source: loadbalancerip-mutator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: loadbalancerip-mutator
spec:
  selector:
    name: loadbalancerip-mutator
  ports:
    - protocol: TCP
      port: 443
      targetPort: 8080
---
# Source: loadbalancerip-mutator/templates/deployment.yaml
apiVersion: apps/v1
metadata:
  name: loadbalancerip-mutator
kind: Deployment
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: loadbalancerip-mutator
    spec:
      serviceAccountName: loadbalancerip-mutator
      containers:
        - name: loadbalancerip-mutator
          image: ghcr.io/sshota0809/loadbalancerip-mutator:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              port: 8080
              path: /health
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              port: 8080
              path: /health
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: webhook-certificate
              mountPath: /etc/cert
          args:
            - "--pool"
            - "10.101.20.168/29"
            - "-v"
            - "debug"
            - "--tls-key-file"
            - "/etc/cert/tls.key"
            - "--tls-cert-file"
            - "/etc/cert/tls.crt"
      volumes:
        - name: webhook-certificate
          secret:
            secretName: webhook-certificate
            defaultMode: 0644
  selector:
    matchLabels:
      name: loadbalancerip-mutator
---
# Source: loadbalancerip-mutator/templates/mutatingWebhookConfiguration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: "loadbalancerip-mutating-webhook"
  annotations:
    cert-manager.io/inject-ca-from: loadbalancerip-mutator/webhook-certificate
webhooks:
  - name: "loadbalancerip-mutator.loadbalancerip-mutator.svc.cluster.local"
    failurePolicy: Fail
    rules:
      - apiGroups: [""]
        operations: ["CREATE", "UPDATE"]
        apiVersions: ["v1"]
        resources: ["services"]
        scope: "Namespaced"
    clientConfig:
      service:
        namespace: loadbalancerip-mutator
        name: loadbalancerip-mutator
        path: /mutate
    admissionReviewVersions: ["v1", "v1beta1"]
    timeoutSeconds: 5
    sideEffects: None
